
DROP TABLE IF EXISTS Bike;
CREATE TABLE Bike(
bike_id INT GENERATED BY DEFAULT AS IDENTITY,
bike_name VARCHAR(200),
cst_per_day INT
);

DROP  TABLE IF EXISTS Micro;
CREATE  TABLE Micro(
micro_id INT GENERATED BY DEFAULT AS IDENTITY,
micro_name VARCHAR(200),
cst_per_day INT
);
DROP TABLE IF EXISTS Bus;
CREATE TABLE Bus(
bus_id INT GENERATED BY DEFAULT AS IDENTITY,
bus_name VARCHAR(200),
cst_per_day INT
);
INSERT  INTO Bike(bike_name,cst_per_day)
VALUES
('Yamaha MT 15',1500),
('Royal Enfield Classic 350',1600),
('Yamaha R15 V4',1400),
('Royal Enfield Hunter 350',1400),
('Hero Splendor Plus',800),
('Hero Xtreme 125R',1000),
('TVS Raider 125',900),
('Yamaha R15 V4',1200),
('Bajaj Pulsar NS200',800),
('Honda Activa 6G',700);

--SELECT * FROM Bike;

INSERT  INTO Micro(micro_name,cst_per_day)
VALUES
('BMW',4000),
('Volvo',3500),
('Audi',3300),
('Mercedes',3900),
('Lamborghini',4100),
('Toyota',3200),
('Range Rover',4000),
('Volkswagen Touareg',4200),
('Jaguar XJ XJL',2500),
('Porsche',2300);

--SELECT  * from Micro;

INSERT INTO Bus(bus_name,cst_per_day)
VALUES
('Shyamoli Paribahan',10000),
('Shohag Paribahan Pvt',12000),
('ena transport',12500),
('saint martin',20000),
('royal coach',30000),
('desj travel',40000),
('soudia',25000);

--SELECT * from Bus;
--user name should be distinct


DROP TABLE IF EXISTS Customer;
CREATE  TABLE Customer(
id INT GENERATED BY DEFAULT AS IDENTITY,
customer_name VARCHAR(30),
customer_contact VARCHAR(11),
taken_transport VARCHAR,
cst_day INT,
trans_id INT,
c_last_date DATE NOT NULL DEFAULT CURRENT_DATE
);
INSERT INTO Customer(customer_name,customer_contact,c_last_date,taken_transport,cst_day,trans_id)
    VALUES
    ('xyzz','01236377777','1978-02-05','xtf',1000,100);
 
--SELECT * from Customer;

/*drop FUNCTION if EXISTS searching_user;
CREATE FUNCTION searching_user(user_names VARCHAR)
RETURNs VARCHAR
LANGUAGE plpgsql
AS
$$
declare
customer_input varchar;
begin
select customer_name from Customer
into customer_input
where
customer_name=user_names;
return customer_input;
end;
$$;*/ 

DROP  TABLE IF EXISTS transport;

CREATE  TABLE transport AS
SELECT bike_name,cst_per_day FROM Bike
UNION ALL
SELECT Micro_name,cst_per_day FROM Micro
UNION ALL
SELECT bus_name,cst_per_day FROM Bus;
ALTER  TABLE transport RENAME bike_name TO transport_name;
ALTER TABLE transport ADD id INT GENERATED BY DEFAULT AS IDENTITY;
--SELECT * from transport;



--SELECT * from Customer;

DROP FUNCTION IF EXISTS wakat;
CREATE FUNCTION wakat(lo INT, hi INT)
RETURNS TABLE (
    -- specify the structure of the returned table
    -- for example, if transport table has columns id (integer) and name (text)
    id INTEGER,
    NAME TEXT,
    cst_per_day INT
)
LANGUAGE plpgsql
AS $$
BEGIN
    RETURN QUERY SELECT transport.id::integer, transport.transport_name::text,transport.cst_per_day::int FROM transport WHERE transport.cst_per_day BETWEEN lo AND hi;
END;
$$;
--SELECT * FROM wakat(1000,2000) order by cst_per_day ASC;

DO $$
declare
chk varchar='xyz';
tem_id int;
tem_trans varchar;
cstt int;
tem RECORD;
begin
select * from Customer
into tem
where customer_name=chk;
if not found then 
    /*INSERT INTO Customer(customer_name,customer_contact,c_last_date)
    VALUES
    (chk,'01236377777',NOW());
    raise notice 'not found';*/
    drop table if exists tem_table; 
    create temp table tem_table as SELECT * FROM wakat(1000,2000) order by cst_per_day DESC limit 1;
    /*select id into tem_id  from tem_table;
    delete from transport where id=tem_id;*/
    select id,name,cst_per_day into tem_id,tem_trans,cstt  from tem_table;
    INSERT INTO Customer(customer_name,customer_contact,c_last_date,taken_transport,cst_day,trans_id)
    VALUES
    (chk,'00000000000',NOW(),tem_trans,cstt,tem_id);
    delete from transport where id=tem_id;
    
    
else 
    --raise notice 'not found % % %',tem.customer_name,tem.customer_contact,tem.c_last_date;
    UPDATE Customer
    SET c_last_date=NOW();
    drop table if exists tem_table;
    create temp table tem_table as SELECT * FROM wakat(1000,2000) order by cst_per_day DESC limit 1;
    
    select id,name,cst_per_day into tem_id,tem_trans,cstt  from tem_table;
    UPDATE Customer set trans_id=tem_id,taken_transport=tem_trans,cst_day=cstt;
    delete from transport where id=tem_id;
    
    
end if;
end;
$$;
--SELECT * from transport;
--SELECT * from tem_table;

--SELECT * from Customer;
--SELECT * from transport;


--now giving bback and claculation and restore process;
DO $$
declare
cname varchar ='xyz';
tot int;
tname varchar;
tid int;
tcst int;
begin
select taken_transport,cst_day,trans_id into tname,tcst,tid from Customer
where  customer_name=cname;
if not found then
    raise notice 'system error';
else 
    insert into transport(transport_name,cst_per_day,id)
    values(tname,tcst,tid);
    --SELECT EXTRACT(DAY FROM INTERVAL '16795 days 18:03:20.65743');
    SELECT EXTRACT(DAY FROM (NOW()-Customer.c_last_date)) * Customer.cst_day INTO tot FROM Customer;
    raise notice '%',tot;
 end if;
end;
$$;
--SELECT * from transport;










